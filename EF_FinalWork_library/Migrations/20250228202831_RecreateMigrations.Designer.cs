// <auto-generated />
using System;
using Library.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_FinalWork_library.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20250228202831_RecreateMigrations")]
    partial class RecreateMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_FinalWork_library.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 2,
                            FullName = "George Orwell"
                        },
                        new
                        {
                            Id = 3,
                            FullName = "J.R.R. Tolkien"
                        });
                });

            modelBuilder.Entity("EF_FinalWork_library.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<int?>("PreviousBookId")
                        .HasColumnType("int");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<double>("SalePrice")
                        .HasColumnType("float");

                    b.Property<int>("StockCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PreviousBookId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CostPrice = 10.5,
                            Genre = "Fantasy",
                            PageCount = 309,
                            PublisherId = 1,
                            SalePrice = 20.0,
                            StockCount = 40,
                            Title = "Harry Potter and the Sorcerer's Stone",
                            Year = 1997
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CostPrice = 5.0,
                            Genre = "Dystopian",
                            PageCount = 328,
                            PublisherId = 2,
                            SalePrice = 12.0,
                            StockCount = 30,
                            Title = "1984",
                            Year = 1949
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CostPrice = 8.0,
                            Genre = "Fantasy",
                            PageCount = 310,
                            PublisherId = 3,
                            SalePrice = 18.0,
                            StockCount = 20,
                            Title = "The Hobbit",
                            Year = 1937
                        });
                });

            modelBuilder.Entity("EF_FinalWork_library.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bob"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Marley"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Eliana"
                        });
                });

            modelBuilder.Entity("EF_FinalWork_library.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Scholastic"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Harcourt"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Penguin"
                        });
                });

            modelBuilder.Entity("EF_FinalWork_library.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            CustomerId = 1,
                            ReservationDate = new DateTime(2025, 3, 1, 10, 33, 50, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            CustomerId = 2,
                            ReservationDate = new DateTime(2025, 3, 4, 10, 33, 50, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("EF_FinalWork_library.Entities.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            Quantity = 2,
                            SaleDate = new DateTime(2025, 2, 22, 10, 40, 20, 0, DateTimeKind.Utc),
                            TotalPrice = 40.0
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            Quantity = 1,
                            SaleDate = new DateTime(2025, 2, 22, 10, 40, 20, 0, DateTimeKind.Utc),
                            TotalPrice = 12.0
                        });
                });

            modelBuilder.Entity("EF_FinalWork_library.Entities.Book", b =>
                {
                    b.HasOne("EF_FinalWork_library.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_FinalWork_library.Entities.Book", "PreviousBook")
                        .WithMany()
                        .HasForeignKey("PreviousBookId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EF_FinalWork_library.Entities.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("PreviousBook");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("EF_FinalWork_library.Entities.Reservation", b =>
                {
                    b.HasOne("EF_FinalWork_library.Entities.Book", "Book")
                        .WithMany("Reservations")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_FinalWork_library.Entities.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EF_FinalWork_library.Entities.Sale", b =>
                {
                    b.HasOne("EF_FinalWork_library.Entities.Book", "Book")
                        .WithMany("Sales")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("EF_FinalWork_library.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("EF_FinalWork_library.Entities.Book", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("EF_FinalWork_library.Entities.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("EF_FinalWork_library.Entities.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
